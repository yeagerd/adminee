{
  "openapi": "3.1.0",
  "info": {
    "title": "Briefly Chat Service",
    "description": "AI-powered chat service with multi-agent workflow for draft management and conversation history",
    "contact": {
      "name": "Briefly Team",
      "email": "support@briefly.ai"
    },
    "license": {
      "name": "Private"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/ready": {
      "get": {
        "summary": "Ready Check",
        "operationId": "ready_check_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/chat/completions": {
      "post": {
        "summary": "Chat Endpoint",
        "description": "Chat endpoint using WorkflowAgent multi-agent system.\n\nDemonstrates database model to API model conversion pattern.",
        "operationId": "chat_endpoint_v1_chat_completions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/completions/stream": {
      "post": {
        "summary": "Chat Stream Endpoint",
        "description": "Streaming chat endpoint using Server-Sent Events (SSE).\n\nThis endpoint streams the multi-agent workflow responses in real-time,\nallowing clients to see responses as they're generated.",
        "operationId": "chat_stream_endpoint_v1_chat_completions_stream_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/threads": {
      "get": {
        "summary": "List Threads",
        "description": "List threads for a given user using history_manager.\n\nCONVERSION PATTERN EXAMPLE: Thread (database) -> ThreadResponse (API)\nThis function demonstrates the standard pattern for converting database\nmodels to API response models.",
        "operationId": "list_threads_v1_chat_threads_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/threads/{thread_id}/history": {
      "get": {
        "summary": "Thread History",
        "description": "Get chat history for a given thread using history_manager.\n\nCONVERSION PATTERN EXAMPLE: Message (database) -> MessageResponse (API)\nThis function demonstrates the standard pattern for converting database\nmodels to API response models with computed fields.",
        "operationId": "thread_history_v1_chat_threads__thread_id__history_get",
        "parameters": [
          {
            "name": "thread_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Thread Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/feedback": {
      "post": {
        "summary": "Feedback Endpoint",
        "description": "Receive user feedback for a message.",
        "operationId": "feedback_endpoint_v1_chat_feedback_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/drafts": {
      "post": {
        "summary": "Create User Draft Endpoint",
        "description": "Create a new user draft.",
        "operationId": "create_user_draft_endpoint_v1_chat_drafts_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDraftRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDraftResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List User Drafts Endpoint",
        "description": "List user drafts with optional filtering.",
        "operationId": "list_user_drafts_endpoint_v1_chat_drafts_get",
        "parameters": [
          {
            "name": "draft_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Draft Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDraftListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/drafts/{draft_id}": {
      "get": {
        "summary": "Get User Draft Endpoint",
        "description": "Get a specific user draft.",
        "operationId": "get_user_draft_endpoint_v1_chat_drafts__draft_id__get",
        "parameters": [
          {
            "name": "draft_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Draft Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDraftResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Draft Endpoint",
        "description": "Update a user draft.",
        "operationId": "update_user_draft_endpoint_v1_chat_drafts__draft_id__put",
        "parameters": [
          {
            "name": "draft_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Draft Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDraftRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDraftResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User Draft Endpoint",
        "description": "Delete a user draft.",
        "operationId": "delete_user_draft_endpoint_v1_chat_drafts__draft_id__delete",
        "parameters": [
          {
            "name": "draft_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Draft Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserDraftResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChatRequest": {
        "properties": {
          "thread_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thread Id"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "user_context": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Context"
          },
          "user_timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Timezone"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ChatRequest",
        "description": "Request model for chat endpoint.\n\nRepresents a user's chat message request with optional thread context.\nUser ID is provided via X-User-Id header from the gateway.\nuser_timezone is deprecated; use user_context['timezone'] instead."
      },
      "ChatResponse": {
        "properties": {
          "thread_id": {
            "type": "string",
            "title": "Thread Id"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            },
            "type": "array",
            "title": "Messages"
          },
          "drafts": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DraftEmail"
                    },
                    {
                      "$ref": "#/components/schemas/DraftCalendarEvent"
                    },
                    {
                      "$ref": "#/components/schemas/DraftCalendarChange"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Drafts"
          }
        },
        "type": "object",
        "required": [
          "thread_id",
          "messages"
        ],
        "title": "ChatResponse",
        "description": "Response model for chat endpoint.\n\nContains the complete chat response including thread context and messages.\nUses MessageResponse models for consistent API serialization."
      },
      "DeleteUserDraftResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "title": "DeleteUserDraftResponse"
      },
      "DraftCalendarChange": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "calendar_change"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id"
          },
          "change_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Change Type"
          },
          "new_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Title"
          },
          "new_start_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Start Time"
          },
          "new_end_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New End Time"
          },
          "new_attendees": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Attendees"
          },
          "new_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Location"
          },
          "new_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Description"
          },
          "thread_id": {
            "type": "string",
            "title": "Thread Id"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "thread_id",
          "created_at"
        ],
        "title": "DraftCalendarChange",
        "description": "Draft calendar change data structure."
      },
      "DraftCalendarEvent": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "calendar_event"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "attendees": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attendees"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "thread_id": {
            "type": "string",
            "title": "Thread Id"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "thread_id",
          "created_at"
        ],
        "title": "DraftCalendarEvent",
        "description": "Draft calendar event data structure."
      },
      "DraftEmail": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "email"
          },
          "to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "To"
          },
          "cc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cc"
          },
          "bcc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bcc"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          },
          "thread_id": {
            "type": "string",
            "title": "Thread Id"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "thread_id",
          "created_at"
        ],
        "title": "DraftEmail",
        "description": "Draft email data structure."
      },
      "FeedbackRequest": {
        "properties": {
          "thread_id": {
            "type": "string",
            "title": "Thread Id"
          },
          "message_id": {
            "type": "string",
            "title": "Message Id"
          },
          "feedback": {
            "type": "string",
            "title": "Feedback"
          }
        },
        "type": "object",
        "required": [
          "thread_id",
          "message_id",
          "feedback"
        ],
        "title": "FeedbackRequest",
        "description": "Request model for user feedback on messages.\n\nAllows users to provide thumbs up/down feedback on AI responses.\nUser ID is extracted from X-User-Id header by the gateway."
      },
      "FeedbackResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "FeedbackResponse",
        "description": "Response model for feedback submission.\n\nSimple acknowledgment response for feedback requests."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "MessageResponse": {
        "properties": {
          "message_id": {
            "type": "string",
            "title": "Message Id"
          },
          "thread_id": {
            "type": "string",
            "title": "Thread Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "llm_generated": {
            "type": "boolean",
            "title": "Llm Generated",
            "default": false
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "message_id",
          "thread_id",
          "user_id",
          "content",
          "created_at"
        ],
        "title": "MessageResponse",
        "description": "API response model for chat messages.\n\nThis is the API/serialization representation of a chat message, separate from\nthe database Message model to maintain clean separation of concerns.\n\nNote: This model is separate from Message (database model) to maintain\nclean separation between data persistence and API contracts.\n\nAPI Design:\n- Uses string types for JSON serialization compatibility\n- Adds computed fields not present in database (llm_generated)\n- Excludes internal database relationships (thread)\n- Provides stable API contract independent of database schema\n- Uses descriptive field names (message_id vs id)\n\nDatabase Conversion:\n- Created by converting Message database model in API layer\n- ID fields converted from int to string for JSON compatibility\n- Datetime fields converted to string for JSON serialization\n- Computed fields added based on business logic\n- Relationships excluded for clean API response\n\nExample conversion from Message database model:\n    MessageResponse(\n        message_id=str(message.id),         # int -> str, renamed\n        thread_id=str(message.thread_id),   # int -> str\n        user_id=message.user_id,\n        llm_generated=(message.user_id != user_id),  # computed field\n        content=message.content,\n        created_at=str(message.created_at), # datetime -> str\n    )"
      },
      "UserDraftListResponse": {
        "properties": {
          "drafts": {
            "items": {
              "$ref": "#/components/schemas/UserDraftResponse"
            },
            "type": "array",
            "title": "Drafts"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "drafts",
          "total_count",
          "has_more"
        ],
        "title": "UserDraftListResponse",
        "description": "Response model for user draft lists."
      },
      "UserDraftRequest": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "thread_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thread Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "content"
        ],
        "title": "UserDraftRequest",
        "description": "Request model for creating/updating user drafts."
      },
      "UserDraftResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "thread_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thread Id"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "type",
          "content",
          "metadata",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "UserDraftResponse",
        "description": "Response model for user drafts."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  },
  "tags": [
    {
      "name": "chat",
      "description": "Chat operations including conversations, drafts, and AI interactions"
    },
    {
      "name": "drafts",
      "description": "Draft management for emails and calendar events"
    },
    {
      "name": "health",
      "description": "Health check and service status endpoints"
    }
  ]
}