# Dockerfile for User Service (Node.js)

# Use an official Node.js runtime as a parent image
FROM node:20-alpine

# Set the working directory in the container
WORKDIR /app/user-service

# Copy package.json and package-lock.json (or yarn.lock) first
# Assuming the user service is in services/user-service/
COPY services/user-service/package.json services/user-service/yarn.lock* ./ 
# If using npm instead of yarn, it would be:
# COPY services/user-service/package.json services/user-service/package-lock.json* ./

# Install dependencies
# If using yarn:
RUN yarn install --frozen-lockfile --production
# If using npm:
# RUN npm ci --only=production

# Copy the rest of the application code for the user service
COPY services/user-service/ ./ 

# Expose the port the app runs on (e.g., 8081 or 3002)
EXPOSE 8081

# Define the command to run the application
# This assumes your entry point is index.js
# CMD ["node", "index.js"]
# For now, a placeholder command as index.js doesn't exist yet
CMD ["node", "-e", "console.log('User service placeholder. index.js with server logic needed. Listening on port 8081 (example).')"] 