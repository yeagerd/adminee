# Dockerfile for User Management Service (Python/FastAPI)

# Use an official Python runtime as a parent image
FROM python:3.11-slim-bullseye

# Set environment variables for Python
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Set the working directory in the container
WORKDIR /app

# Install system dependencies including GCP SDK if needed
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        gcc \
        libpq-dev \
        curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements file and install Python dependencies
COPY services/user_management/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy the user management service code
COPY services/user_management/ ./services/user_management/

# Set Python path to include the services directory
ENV PYTHONPATH=/app

# Environment configuration
# ENVIRONMENT: local|staging|production
ENV ENVIRONMENT=production
# GCP Project ID for Secret Manager (set by Cloud Run automatically)
ENV GOOGLE_CLOUD_PROJECT=""

# Note: In production, secrets are retrieved via:
# 1. Secret Manager SDK calls (preferred)
# 2. Cloud Run secret mounts as environment variables
# Local development uses docker-compose environment variables

# Expose the port the app runs on
EXPOSE 8001

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# Define the command to run the application
CMD ["opentelemetry-instrument", "uvicorn", "services.user_management.main:app", "--host", "0.0.0.0", "--port", "8001"]