"""initial_migration

Revision ID: c52ef2783d8a
Revises: 
Create Date: 2025-07-24 01:21:48.238041

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c52ef2783d8a'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('meeting_polls',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('location', sa.String(length=500), nullable=True),
    sa.Column('meeting_type', sa.Enum('in_person', 'virtual', 'tbd', name='meetingtype'), nullable=True),
    sa.Column('status', sa.Enum('draft', 'active', 'closed', 'scheduled', name='pollstatus'), nullable=True),
    sa.Column('response_deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('min_participants', sa.Integer(), nullable=True),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('allow_anonymous_responses', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('scheduled_slot_id', sa.UUID(), nullable=True),
    sa.Column('poll_token', sa.String(length=64), nullable=False),
    # sa.ForeignKeyConstraint(['scheduled_slot_id'], ['time_slots.id'], ),  # Removed for now
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('poll_token')
    )
    op.create_table('time_slots',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('poll_id', sa.UUID(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['poll_id'], ['meeting_polls.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # Add the foreign key constraint after both tables exist
    op.create_foreign_key(
        'fk_meeting_polls_scheduled_slot_id_time_slots',
        'meeting_polls', 'time_slots',
        ['scheduled_slot_id'], ['id']
    )
    op.create_table('chat_meetings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('chat_message', sa.Text(), nullable=False),
    sa.Column('extracted_intent', sa.Text(), nullable=True),
    sa.Column('poll_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['poll_id'], ['meeting_polls.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('poll_participants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('poll_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('pending', 'responded', 'declined', name='participantstatus'), nullable=True),
    sa.Column('invited_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('responded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reminder_sent_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['poll_id'], ['meeting_polls.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('poll_id', 'email', name='_poll_email_uc')
    )
    op.create_table('poll_responses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('poll_id', sa.UUID(), nullable=False),
    sa.Column('participant_id', sa.UUID(), nullable=False),
    sa.Column('time_slot_id', sa.UUID(), nullable=False),
    sa.Column('response', sa.Enum('available', 'unavailable', 'maybe', name='responsetype'), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['participant_id'], ['poll_participants.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['poll_id'], ['meeting_polls.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['time_slot_id'], ['time_slots.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('participant_id', 'time_slot_id', name='_participant_slot_uc')
    )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('poll_responses')
    op.drop_table('poll_participants')
    op.drop_table('chat_meetings')
    op.drop_table('time_slots')
    op.drop_table('meeting_polls')
    # ### end Alembic commands ###
