"""initial migration

Revision ID: 746a3beff9c9
Revises:
Create Date: 2025-07-29 22:34:43.896512

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "746a3beff9c9"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "carrierconfig",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "carrier_name", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.Column(
            "api_endpoint", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True
        ),
        sa.Column("rate_limit_per_hour", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("email_patterns", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "label",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column("color", sqlmodel.sql.sqltypes.AutoString(length=7), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_label_user_id"), "label", ["user_id"], unique=False)
    op.create_table(
        "package",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "tracking_number",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=False,
        ),
        sa.Column(
            "carrier", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "IN_TRANSIT",
                "OUT_FOR_DELIVERY",
                "DELIVERED",
                "EXCEPTION",
                "DELAYED",
                "CANCELLED",
                "RETURNED",
                name="packagestatus",
            ),
            nullable=False,
        ),
        sa.Column("estimated_delivery", sa.Date(), nullable=True),
        sa.Column("actual_delivery", sa.Date(), nullable=True),
        sa.Column(
            "recipient_name",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=True,
        ),
        sa.Column(
            "recipient_address", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column(
            "shipper_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True
        ),
        sa.Column(
            "package_description", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column(
            "order_number", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True
        ),
        sa.Column(
            "tracking_link", sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("archived_at", sa.DateTime(), nullable=True),
        sa.Column(
            "email_message_id",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "user_id",
            "tracking_number",
            "carrier",
            name="uq_package_user_tracking_carrier",
        ),
        sqlite_autoincrement=True,
    )
    op.create_index(
        op.f("ix_package_tracking_number"), "package", ["tracking_number"], unique=False
    )
    op.create_index(op.f("ix_package_user_id"), "package", ["user_id"], unique=False)
    op.create_table(
        "packagelabel",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("package_id", sa.Integer(), nullable=False),
        sa.Column("label_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["label_id"],
            ["label.id"],
        ),
        sa.ForeignKeyConstraint(
            ["package_id"],
            ["package.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trackingevent",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("package_id", sa.Integer(), nullable=False),
        sa.Column("event_date", sa.DateTime(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "IN_TRANSIT",
                "OUT_FOR_DELIVERY",
                "DELIVERED",
                "EXCEPTION",
                "DELAYED",
                "CANCELLED",
                "RETURNED",
                name="packagestatus",
            ),
            nullable=False,
        ),
        sa.Column(
            "location", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True
        ),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["package_id"],
            ["package.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("trackingevent")
    op.drop_table("packagelabel")
    op.drop_index(op.f("ix_package_user_id"), table_name="package")
    op.drop_index(op.f("ix_package_tracking_number"), table_name="package")
    op.drop_table("package")
    op.drop_index(op.f("ix_label_user_id"), table_name="label")
    op.drop_table("label")
    op.drop_table("carrierconfig")
    # ### end Alembic commands ###
