"""Initial schema

Revision ID: 791881f77389
Revises:
Create Date: 2025-06-09 16:10:39.666139

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "791881f77389"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("first_name", sa.String(length=100), nullable=True),
        sa.Column("last_name", sa.String(length=100), nullable=True),
        sa.Column("profile_image_url", sa.String(length=500), nullable=True),
        sa.Column("onboarding_completed", sa.Boolean(), nullable=True),
        sa.Column("onboarding_step", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "audit_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user", sa.String(length=255), nullable=True),
        sa.Column("action", sa.String(length=100), nullable=False),
        sa.Column("resource_type", sa.String(length=50), nullable=False),
        sa.Column("resource_id", sa.String(length=255), nullable=True),
        sa.Column("details", sa.JSON(none_as_null=True), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.Column("user_agent", sa.String(length=500), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user"],
            ["users.id"],
            name="fk_audit_logs_users_id_user",
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "integrations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user", sa.String(length=255), nullable=True),
        sa.Column(
            "provider",
            sa.Enum("GOOGLE", "MICROSOFT", "SLACK", name="integrationprovider"),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "INACTIVE", "ERROR", "PENDING", name="integrationstatus"),
            nullable=True,
        ),
        sa.Column("provider_user_id", sa.String(length=255), nullable=True),
        sa.Column("provider_email", sa.String(length=255), nullable=True),
        sa.Column("scopes", sa.JSON(none_as_null=True), nullable=True),
        sa.Column("metadata", sa.JSON(none_as_null=True), nullable=True),
        sa.Column("last_sync_at", sa.DateTime(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user"],
            ["users.id"],
            name="fk_integrations_users_id_user",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_preferences",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user", sa.String(length=255), nullable=True),
        sa.Column("theme", sa.String(length=20), nullable=True),
        sa.Column("language", sa.String(length=10), nullable=True),
        sa.Column("timezone", sa.String(length=50), nullable=True),
        sa.Column("date_format", sa.String(length=20), nullable=True),
        sa.Column("time_format", sa.String(length=10), nullable=True),
        sa.Column("email_notifications", sa.Boolean(), nullable=True),
        sa.Column("push_notifications", sa.Boolean(), nullable=True),
        sa.Column("marketing_emails", sa.Boolean(), nullable=True),
        sa.Column("ai_suggestions_enabled", sa.Boolean(), nullable=True),
        sa.Column("ai_model_preference", sa.String(length=50), nullable=True),
        sa.Column("auto_summarization", sa.Boolean(), nullable=True),
        sa.Column("google_integration_enabled", sa.Boolean(), nullable=True),
        sa.Column("microsoft_integration_enabled", sa.Boolean(), nullable=True),
        sa.Column("slack_integration_enabled", sa.Boolean(), nullable=True),
        sa.Column("data_retention_days", sa.Integer(), nullable=True),
        sa.Column("share_analytics", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user"],
            ["users.id"],
            name="fk_user_preferences_users_id_user",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "encrypted_tokens",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user", sa.String(length=255), nullable=True),
        sa.Column("integration", sa.Integer(), nullable=True),
        sa.Column(
            "token_type", sa.Enum("ACCESS", "REFRESH", name="tokentype"), nullable=False
        ),
        sa.Column("encrypted_value", sa.Text(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=True),
        sa.Column("scopes", sa.JSON(none_as_null=True), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["integration"],
            ["integrations.id"],
            name="fk_encrypted_tokens_integrations_id_integration",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user"],
            ["users.id"],
            name="fk_encrypted_tokens_users_id_user",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # Add indexes for performance (Task 2.8)
    op.create_index("ix_user_preferences_user", "user_preferences", ["user"])
    op.create_index("ix_integrations_user", "integrations", ["user"])
    op.create_index("ix_integrations_provider", "integrations", ["provider"])
    op.create_index("ix_integrations_status", "integrations", ["status"])
    op.create_index("ix_integrations_created_at", "integrations", ["created_at"])
    op.create_index("ix_encrypted_tokens_user", "encrypted_tokens", ["user"])
    op.create_index(
        "ix_encrypted_tokens_integration", "encrypted_tokens", ["integration"]
    )
    op.create_index("ix_audit_logs_user", "audit_logs", ["user"])
    op.create_index("ix_audit_logs_created_at", "audit_logs", ["created_at"])
    op.create_index("ix_audit_logs_action", "audit_logs", ["action"])
    op.create_index("ix_audit_logs_resource_type", "audit_logs", ["resource_type"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop indexes
    op.drop_index("ix_audit_logs_resource_type", "audit_logs")
    op.drop_index("ix_audit_logs_action", "audit_logs")
    op.drop_index("ix_audit_logs_created_at", "audit_logs")
    op.drop_index("ix_audit_logs_user", "audit_logs")
    op.drop_index("ix_encrypted_tokens_integration", "encrypted_tokens")
    op.drop_index("ix_encrypted_tokens_user", "encrypted_tokens")
    op.drop_index("ix_integrations_created_at", "integrations")
    op.drop_index("ix_integrations_status", "integrations")
    op.drop_index("ix_integrations_provider", "integrations")
    op.drop_index("ix_integrations_user", "integrations")
    op.drop_index("ix_user_preferences_user", "user_preferences")

    # Drop tables
    op.drop_table("encrypted_tokens")
    op.drop_table("user_preferences")
    op.drop_table("integrations")
    op.drop_table("audit_logs")
    op.drop_table("users")
    # ### end Alembic commands ###
