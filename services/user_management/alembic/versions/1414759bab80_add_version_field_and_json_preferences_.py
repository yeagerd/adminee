"""Add version field and JSON preferences structure

Revision ID: 1414759bab80
Revises: 791881f77389
Create Date: 2025-06-09 18:11:27.946821

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "1414759bab80"
down_revision = "791881f77389"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Add new JSON-based preference columns and version field
    op.add_column(
        "user_preferences", sa.Column("version", sa.String(length=10), nullable=True)
    )
    op.add_column(
        "user_preferences",
        sa.Column("ui_preferences", sa.JSON(none_as_null=True), nullable=True),
    )
    op.add_column(
        "user_preferences",
        sa.Column(
            "notification_preferences", sa.JSON(none_as_null=True), nullable=True
        ),
    )
    op.add_column(
        "user_preferences",
        sa.Column("ai_preferences", sa.JSON(none_as_null=True), nullable=True),
    )
    op.add_column(
        "user_preferences",
        sa.Column("integration_preferences", sa.JSON(none_as_null=True), nullable=True),
    )
    op.add_column(
        "user_preferences",
        sa.Column("privacy_preferences", sa.JSON(none_as_null=True), nullable=True),
    )

    # Set default version for existing records
    op.execute("UPDATE user_preferences SET version = '1.0' WHERE version IS NULL")

    # Drop old individual preference columns
    op.drop_column("user_preferences", "ai_model_preference")
    op.drop_column("user_preferences", "timezone")
    op.drop_column("user_preferences", "date_format")
    op.drop_column("user_preferences", "theme")
    op.drop_column("user_preferences", "auto_summarization")
    op.drop_column("user_preferences", "push_notifications")
    op.drop_column("user_preferences", "email_notifications")
    op.drop_column("user_preferences", "marketing_emails")
    op.drop_column("user_preferences", "share_analytics")
    op.drop_column("user_preferences", "microsoft_integration_enabled")
    op.drop_column("user_preferences", "data_retention_days")
    op.drop_column("user_preferences", "slack_integration_enabled")
    op.drop_column("user_preferences", "time_format")
    op.drop_column("user_preferences", "google_integration_enabled")
    op.drop_column("user_preferences", "ai_suggestions_enabled")
    op.drop_column("user_preferences", "language")

    # Recreate performance indexes (preserve from initial migration)
    # Use CREATE INDEX IF NOT EXISTS for SQLite compatibility
    op.execute(
        "CREATE INDEX IF NOT EXISTS ix_user_preferences_user ON user_preferences (user)"
    )
    op.execute("CREATE INDEX IF NOT EXISTS ix_integrations_user ON integrations (user)")
    op.execute(
        "CREATE INDEX IF NOT EXISTS ix_integrations_provider ON integrations (provider)"
    )
    op.execute(
        "CREATE INDEX IF NOT EXISTS ix_integrations_status ON integrations (status)"
    )
    op.execute(
        "CREATE INDEX IF NOT EXISTS ix_integrations_created_at ON integrations (created_at)"
    )
    op.execute(
        "CREATE INDEX IF NOT EXISTS ix_encrypted_tokens_user ON encrypted_tokens (user)"
    )
    op.execute(
        "CREATE INDEX IF NOT EXISTS ix_encrypted_tokens_integration ON encrypted_tokens (integration)"
    )
    op.execute("CREATE INDEX IF NOT EXISTS ix_audit_logs_user ON audit_logs (user)")
    op.execute(
        "CREATE INDEX IF NOT EXISTS ix_audit_logs_created_at ON audit_logs (created_at)"
    )
    op.execute("CREATE INDEX IF NOT EXISTS ix_audit_logs_action ON audit_logs (action)")
    op.execute(
        "CREATE INDEX IF NOT EXISTS ix_audit_logs_resource_type ON audit_logs (resource_type)"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop performance indexes first
    op.drop_index("ix_audit_logs_resource_type", "audit_logs")
    op.drop_index("ix_audit_logs_action", "audit_logs")
    op.drop_index("ix_audit_logs_created_at", "audit_logs")
    op.drop_index("ix_audit_logs_user", "audit_logs")
    op.drop_index("ix_encrypted_tokens_integration", "encrypted_tokens")
    op.drop_index("ix_encrypted_tokens_user", "encrypted_tokens")
    op.drop_index("ix_integrations_created_at", "integrations")
    op.drop_index("ix_integrations_status", "integrations")
    op.drop_index("ix_integrations_provider", "integrations")
    op.drop_index("ix_integrations_user", "integrations")
    op.drop_index("ix_user_preferences_user", "user_preferences")

    # Add back old individual preference columns
    op.add_column(
        "user_preferences", sa.Column("language", sa.VARCHAR(length=10), nullable=True)
    )
    op.add_column(
        "user_preferences",
        sa.Column("ai_suggestions_enabled", sa.BOOLEAN(), nullable=True),
    )
    op.add_column(
        "user_preferences",
        sa.Column("google_integration_enabled", sa.BOOLEAN(), nullable=True),
    )
    op.add_column(
        "user_preferences",
        sa.Column("time_format", sa.VARCHAR(length=10), nullable=True),
    )
    op.add_column(
        "user_preferences",
        sa.Column("slack_integration_enabled", sa.BOOLEAN(), nullable=True),
    )
    op.add_column(
        "user_preferences",
        sa.Column("data_retention_days", sa.INTEGER(), nullable=True),
    )
    op.add_column(
        "user_preferences",
        sa.Column("microsoft_integration_enabled", sa.BOOLEAN(), nullable=True),
    )
    op.add_column(
        "user_preferences", sa.Column("share_analytics", sa.BOOLEAN(), nullable=True)
    )
    op.add_column(
        "user_preferences", sa.Column("marketing_emails", sa.BOOLEAN(), nullable=True)
    )
    op.add_column(
        "user_preferences",
        sa.Column("email_notifications", sa.BOOLEAN(), nullable=True),
    )
    op.add_column(
        "user_preferences", sa.Column("push_notifications", sa.BOOLEAN(), nullable=True)
    )
    op.add_column(
        "user_preferences", sa.Column("auto_summarization", sa.BOOLEAN(), nullable=True)
    )
    op.add_column(
        "user_preferences", sa.Column("theme", sa.VARCHAR(length=20), nullable=True)
    )
    op.add_column(
        "user_preferences",
        sa.Column("date_format", sa.VARCHAR(length=20), nullable=True),
    )
    op.add_column(
        "user_preferences", sa.Column("timezone", sa.VARCHAR(length=50), nullable=True)
    )
    op.add_column(
        "user_preferences",
        sa.Column("ai_model_preference", sa.VARCHAR(length=50), nullable=True),
    )

    # Drop JSON preference columns and version field
    op.drop_column("user_preferences", "privacy_preferences")
    op.drop_column("user_preferences", "integration_preferences")
    op.drop_column("user_preferences", "ai_preferences")
    op.drop_column("user_preferences", "notification_preferences")
    op.drop_column("user_preferences", "ui_preferences")
    op.drop_column("user_preferences", "version")
    # ### end Alembic commands ###
