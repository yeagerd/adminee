datasource db {
  provider = "postgresql"
  url      = env("DB_URL_APP")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(cuid())
  clerkUserId    String?   @unique // Renamed from userId, explicitly for Clerk User ID
  email          String?   @unique // Added for completeness, common field
  name           String?   // Added for completeness, common field
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt // Added standard updatedAt
  profileData    Json?     // For Firebase-like flexibility
  calendarProvider String?   // e.g., "microsoft", "google"
  userSettings   Json?     // For { "timezone": "America/New_York", "morningEmailTime": "08:00" }
  calendarEvents CalendarEvent[]
  tasks          Task[]
}

model CalendarEvent {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  startTime DateTime
  endTime   DateTime
  title     String
  details   String?
  tasks     Task[]
}

model Task {
  id              String   @id @default(cuid())
  userId          String
  user            User     @relation(fields: [userId], references: [id])
  calendarEventId String?
  calendarEvent   CalendarEvent? @relation(fields: [calendarEventId], references: [id])
  title           String
  description     String?
  dueDate         DateTime?
  completed       Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
} 