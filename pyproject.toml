[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "briefly"
version = "0.1.0"
description = "Briefly - AI-powered calendar and task management"
readme = "README.md"
requires-python = ">=3.12"
dependencies = []

[project.optional-dependencies]
dev = [
    "black",
    "isort", 
    "ruff",
    "mypy",
    "respx",
    "types-requests",
    "types-pytz",
    "nox",
    "pytest",
    "pytest-asyncio",
    "pytest-mock",
    "pytest-xdist",
    "pytest-cov",
    "pytest-timeout",
    # "pre-commit",  # Uncomment to add automatic pre-commit hooks
    # "bandit",  # Uncomment for security linting
]

# UV workspace configuration
[tool.uv.workspace]
members = [
    "services/chat",
    "services/user",
    "services/office",
    "services/email_sync",
    "services/meetings",
    # Add other services as needed
]

[tool.setuptools.packages.find]
where = ["services"]
include = ["services*"]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache

  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
namespace_packages = true
explicit_package_bases = true
ignore_missing_imports = true
exclude = [
    ".*/tests/.*",
    ".*/test_.*",
]

# Disable call-arg errors only for SQLModel-related issues
[[tool.mypy.overrides]]
module = [
    "services.user.models.*",
    "services.chat.history_manager",
    "services.office.models.*"
]
disable_error_code = ["call-arg"]



[tool.coverage.run]
source = ["services"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.pytest.ini_options]
timeout = 5
timeout_method = "thread"
addopts = "--strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "nox>=2025.5.1",
    "pytest-timeout>=2.4.0",
    "types-pytz>=2025.2.0.20250516",
    "types-requests>=2.32.4.20250611",
]

[tool.pyright]
# Disable specific pyright rules that are too strict for this codebase
# We rely on mypy and pylance for type checking instead
reportMissingImports = false
reportIncompatibleMethodOverride = false
reportAttributeAccessIssue = false
reportOptionalSubscript = false
reportPossiblyUnboundVariable = false
reportCallIssue = false
reportArgumentType = false
reportOptionalIterable = false
reportOperatorIssue = false
reportOptionalMemberAccess = false
reportFunctionMemberAccess = false
