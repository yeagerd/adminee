services:
  app:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
      args:
        VARIANT: "3.11-bullseye"
    volumes:
      - .:/workspace:cached
    command: sleep infinity
    ports:
      - "3000:3000" # For Next.js frontend
      - "8000:8000" # For Python/FastAPI backend (Note: Original 'app' service. If chat-service is also FastAPI on 8000, ports need adjustment)
    depends_on:
      - db
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      # Frontend / Next.js specific vars
      - NEXTAUTH_URL=${NEXTAUTH_URL} # For NextAuth
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET} # For NextAuth
      - AZURE_AD_CLIENT_ID=${AZURE_AD_CLIENT_ID} # For NextAuth Microsoft Provider
      - AZURE_AD_CLIENT_SECRET=${AZURE_AD_CLIENT_SECRET} # For NextAuth Microsoft Provider
      - AZURE_AD_TENANT_ID=${AZURE_AD_TENANT_ID} # For NextAuth Microsoft Provider
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY} # For Clerk
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY} # For Clerk
      # Add other necessary environment variables for the app service

  user-management:
    build:
      context: .
      dockerfile: Dockerfile.user-service
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-briefly}
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # API key required to access this service
      - API_KEY_USER_MANAGEMENT=${API_KEY_USER_MANAGEMENT:-dev-user-management-key}
      - TOKEN_ENCRYPTION_SALT=${TOKEN_ENCRYPTION_SALT:-default-salt-change-in-production}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - CLERK_WEBHOOK_SECRET=${CLERK_WEBHOOK_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - MICROSOFT_CLIENT_ID=${MICROSOFT_CLIENT_ID}
      - MICROSOFT_CLIENT_SECRET=${MICROSOFT_CLIENT_SECRET}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
    restart: unless-stopped

  office-service:
    build:
      context: .
      dockerfile: Dockerfile.office-service
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
      - user-management
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-briefly}-office
      - REDIS_URL=redis://redis:6379
      - USER_MANAGEMENT_SERVICE_URL=http://user-management:8001
      # API key required to access this service
      - API_KEY_OFFICE=${API_KEY_OFFICE:-dev-office-key}
      # API key to call user management service (User Management's access key)
      - API_KEY_USER_MANAGEMENT=${API_KEY_USER_MANAGEMENT:-dev-user-management-key}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      # Add other necessary environment variables for office-service
    restart: unless-stopped

  chat-service:
    build:
      context: .
      dockerfile: Dockerfile.chat-service
    ports:
      - "8002:8000" # Changed from 8000 to 8002 to avoid conflict with 'app' service
    depends_on:
      - db # Assuming it might use the main db or its own
      - user-management # If it needs to authenticate/call user-management
      - office-service # If it needs to call office-service
    environment:
      - DATABASE_URL=sqlite:///./chat_service.db # Using SQLite as per .env.example, adjust if shared PG
      - USER_MANAGEMENT_SERVICE_URL=http://user-management:8001
      - OFFICE_SERVICE_URL=http://office-service:8080
      # API key required to access this service
      - API_KEY_CHAT=${API_KEY_CHAT:-dev-chat-key}
      # API keys to call other services (their access keys)
      - API_KEY_USER_MANAGEMENT=${API_KEY_USER_MANAGEMENT:-dev-user-management-key}
      - API_KEY_OFFICE=${API_KEY_OFFICE:-dev-office-key}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LLM_PROVIDER=${LLM_PROVIDER}
      - LLM_MODEL=${LLM_MODEL}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      # Add other necessary environment variables for chat-service
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-briefly}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    restart: unless-stopped

volumes:
  postgres_data: